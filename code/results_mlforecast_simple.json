{
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 226.8653259485341,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 44.19470632540135,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 217.82128553888938,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 202.48875469813768,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 185.1884570275733,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 88.01828116326381,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 27.280301350140185,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 36.834860792634046,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 169.61304476054957,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 176.85162648287428,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 89.75150055596835,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 27.58296116860151,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 46.42941757277341,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 186.94399468288412,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 175.77013346782812,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 57.58770531831734,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 27.58296116860151,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 46.00412590111006,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 179.26836550969605,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 175.7066163015721,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 177.13829177768105,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 43.25471199871722,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 217.7409586032042,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 317.18478336786063,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 183.14910856766235,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 76.19775978369981,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 72.14981278428282,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 49.35225092326551,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 70.48063590230662,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 49.00009126710794,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 163.14227996839702,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 59.47133664049199,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 77.3934841917926,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 74.72108100702324,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 48.95458362291399,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 77.97783666547124,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 70.33674895512439,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 47.60055234195848,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 76.62053337124742,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 49.02112065778803,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 74.18024232436974,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 70.33674895512439,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 47.830182014759295,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 59.87312096742379,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 49.020284693391496,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 73.78859216491259,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 69.20123002199807,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 47.68724907541996,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 61.2544115837221,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 49.096002749501885,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 57.424714531752194,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 44.86573420295763,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 43.03053693820959,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 36.83224003067414,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 40.481830036352136,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 48.78974945784442,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 46.2185026824858,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 42.865570802222166,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 37.12236601905004,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 41.429423806897624,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 48.16392520146906,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 45.74691894978907,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 42.42691840889037,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 35.64832594434183,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 40.873577102144054,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 35.72629220583547,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 36.558667685216136,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 38.32636456051845,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 41.49392863837724,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 40.75883601902024,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 36.045981704413116,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 36.7751400753667,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 38.202921808783145,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 43.31895036334037,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 40.187101373966755,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 57.424714531752095,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 123.65303310994564,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 38.313533039295095,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 35.36604788532962,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 141.66337679856483,
    "('SVR', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 39.61439413729159,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 48.78974945784377,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 123.65303310994564,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 36.535841297549034,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 35.24511959066961,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 134.60266567232082,
    "('SVR', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 39.70247641734339,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 48.16392520146814,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 123.65303310994564,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 38.246082361797065,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 34.684343066592994,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 110.88450683338056,
    "('SVR', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 39.33484119348677,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 35.72629220583548,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 123.65303310994564,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 36.11753007104301,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 32.642784381529474,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 40.9264998822356,
    "('SVR', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 39.22381485356564,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 36.04598170441345,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 123.65303310994564,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 36.7280119268038,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 32.64862860422835,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 39.23900517061455,
    "('SVR', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 39.13858896044328,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 57.42471453175288,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 132.88435065899847,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 38.29907549233476,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 32.95375344497915,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 70.68223696525067,
    "('SVR', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 72.12339308932877,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 48.78974945784401,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 132.88435065899847,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 36.51431330133016,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 31.897975244462856,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 63.59734633540673,
    "('SVR', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 73.1432915957272,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 48.16392520146874,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 132.88435065899847,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 38.23453404365917,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 33.05626178644925,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 99.9150363912204,
    "('SVR', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 72.35252181407962,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 35.72629220583644,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 132.88435065899847,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 36.11820216935578,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 32.219550636269986,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 96.11291604630304,
    "('SVR', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 72.43269801534319,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 36.04598170441303,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 132.88435065899847,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 36.73075939997173,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 32.36334196839344,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 46.38645599201156,
    "('SVR', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 70.04823455822763,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 41.800935036166024,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 90.0751668333178,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 35.60439628860351,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 34.25047139195519,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 30.09050344253576,
    "('SVR', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 40.96941874887827,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 38.85750231358787,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 90.0751668333178,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 35.09299340201612,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 35.14523916283926,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 40.9296270940901,
    "('SVR', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 40.96611735411257,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 39.21922656915996,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 90.0751668333178,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 34.855927844910724,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 33.99462694156697,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 62.24515253198162,
    "('SVR', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 40.73834587498689,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 33.50512074949032,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 90.0751668333178,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 33.87353708386312,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 35.07492699308536,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 43.14264193982748,
    "('SVR', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 40.70152535444518,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 34.195125963491144,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 90.0751668333178,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 34.41830997355095,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 35.108331660719685,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 45.10154609176728,
    "('SVR', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 40.60764493412615,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 226.86532594853276,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 245.89841814866858,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 170.97856202753013,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 278.7615491876748,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 75.35783596382788,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 262.2423504932719,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 88.0182811632714,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 245.89841814866858,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 52.174601995096324,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 168.85223393738937,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 267.50382688343274,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 211.92843860085839,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 89.75150055597288,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 245.89841814866858,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 61.31030089848001,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 238.63851634402798,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 126.65067404140915,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 212.816096655032,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 57.58770531832403,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 245.89841814866858,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 60.97698946183898,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 179.2522520349083,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 1755.4380108652374,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 208.19928558270385,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 177.13829177768235,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 245.89841814866858,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 171.10015152308392,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 317.3358172745182,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 614.5867525642456,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 254.67433317049705,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 226.8653259485712,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 245.89841814866858,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 217.60112092408633,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 343.4467221390992,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 318.3189638489738,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 676.1421705963412,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 88.01828116305431,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 245.89841814866858,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 52.22663904384404,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 367.72594480485986,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 1506.8304388739134,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 701.5627023698952,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 89.75150055570379,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 245.89841814866858,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 61.35813228766216,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 134.34064719104228,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 4595.81177387886,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 771.5166197552178,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 57.587705318224636,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 245.89841814866858,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 61.024754871747845,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 410.72958651351723,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 1197.2838962626565,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 781.7904830264445,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 177.13829177769108,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 245.89841814866858,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 217.4078679379074,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 328.1316035583948,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 982.9444551045914,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 779.0526353050716,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 76.19775978369968,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 47.83529081375771,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 69.9389346192159,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 1311.982583823956,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 65.37055746518703,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 50.40108951984287,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 163.14227996839767,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 47.83529081375771,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 69.28445209528554,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 327.3903691733176,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 61.74047165672404,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 50.27173675947558,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 77.97783666547195,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 47.83529081375771,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 68.88007133063294,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 535.0582520261496,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 66.86867719027413,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 50.127374398322836,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 74.18024232436986,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 47.83529081375771,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 68.89397814706594,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 62.881475933673,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 72.5060982097581,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 50.11674672524376,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 73.7885921649126,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 47.83529081375771,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 68.97681257115718,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 61.22152165794898,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 90.42319093894561,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 50.116544939635055,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 76.19775978369874,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 47.79555016360011,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 70.18571401985642,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 60.51516967746139,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 70.92893526388745,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 55.06409191592772,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 163.14227996836527,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 47.79555016360011,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 69.53033324301994,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 60.76022008888424,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 66.69088850203947,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 55.31000398633299,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 77.97783666546451,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 47.79555016360011,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 69.12292764179166,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 61.340853324118214,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 92.76521244159102,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 55.43758634468,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 74.18024232437004,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 47.79555016360011,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 69.13688553650186,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 62.88184459901224,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 96.42288216201099,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 55.67865319841322,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 73.78859216491281,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 47.79555016360011,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 69.25278526777805,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 60.72905361374015,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 168.97631378530485,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 55.50353103392911,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 57.424714531752095,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 123.65303310994564,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 38.313533039295095,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 35.36604788532962,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 45.63638102504828,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 39.61439413729159,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 48.78974945784377,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 123.65303310994564,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 36.535841297549034,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 35.24511959066961,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 47.43110446539476,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 39.70247641734339,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 48.16392520146814,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 123.65303310994564,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 38.246082361797065,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 34.684343066592994,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 54.17950555870921,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 39.33484119348677,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 35.72629220583548,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 123.65303310994564,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 36.11753007104301,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 32.642784381529474,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 34.91335998778881,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 39.22381485356564,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 36.04598170441345,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 123.65303310994564,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 36.7280119268038,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 32.64862860422835,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 82.99994762145656,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 39.13858896044328,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 57.42471453175288,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 132.88435065899847,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 38.29907549233476,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 32.95375344497915,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 47.33435038997488,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 72.12339308932877,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 48.78974945784401,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 132.88435065899847,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 36.51431330133016,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 31.897975244462856,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 73.24710699558624,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 73.1432915957272,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 48.16392520146874,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 132.88435065899847,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 38.23453404365917,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 33.05626178644925,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 79.58983530725429,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 72.35252181407962,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 35.72629220583644,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 132.88435065899847,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 36.11820216935578,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 32.219550636269986,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 74.35292549551174,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 72.43269801534319,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 36.04598170441303,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 132.88435065899847,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 36.73075939997173,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 32.36334196839344,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 53.20282863781366,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 70.04823455822763,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 41.800935036166024,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 90.0751668333178,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 35.60439628860351,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 34.25047139195519,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 30.601113764212336,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 40.96941874887827,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 38.85750231358787,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 90.0751668333178,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 35.09299340201612,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 35.14523916283926,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 27.146668931601297,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 40.96611735411257,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 39.21922656915996,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 90.0751668333178,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 34.855927844910724,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 33.99462694156697,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 70.43205966354327,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 40.73834587498689,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 33.50512074949032,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 90.0751668333178,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 33.87353708386312,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 35.07492699308536,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 45.35823181220013,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 40.70152535444518,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 34.195125963491144,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 90.0751668333178,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 34.41830997355095,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 35.108331660719685,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 33.54276635538891,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 7, 15, 18, 173, 200, 335, 368, 369, 379), 'frozenset()')": 40.60764493412615,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 219.37067416257756,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 38.35142478326992,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 235.63835769706444,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 360.3753728538072,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 407.52592021184756,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 74.65692760883907,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 31.034048212741975,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 32.231359722628305,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 102.86451529873818,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 399.16286698497737,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 77.62485760093648,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 30.55500386402204,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 37.5081654740286,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 128.93960434822418,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 397.84329289305566,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 47.50800368261942,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 30.55500386402204,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 37.14977025830829,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 128.1852527016601,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 397.7370166882217,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 104.80816282220162,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 46.28316644133114,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 235.43667393193672,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 226.56879051659757,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 408.2793935241245,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 2358.031833903253,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 134.47738667589465,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 293.7655595207496,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 157.50916706086906,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 48.36936544551979,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 3903.7077973477594,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 462.27482494571495,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 310.4586317018919,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 77.15893749273417,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 48.350862815376175,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 897.465820250399,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 72.36276693669072,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 51.470838473625726,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 70.37234376301905,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 48.35756845536006,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 75.60411405890721,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 72.36276693669072,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 51.50751438690969,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 55.41667258689338,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 48.35662857779732,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 69.2446599146514,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 66.1772616887938,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 50.23226127867486,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 60.392176324797674,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 48.347847092455325,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 53.85121953867748,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 44.022835338879965,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 43.31908456209731,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 37.095223469895814,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 42.2721623828472,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 45.44528441870755,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 44.04191993953865,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 42.44706954263959,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 35.26597674709816,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 42.6953883253811,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 44.200360665189464,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 42.54552678568666,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 41.204064179112976,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 36.50471434576183,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 42.44780678459468,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 36.05355079477868,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 36.24866984986279,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 37.34804865489107,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 43.83377260793262,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 42.41189171007889,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 37.58791730890462,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 37.66286991217856,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 38.40468690560583,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 42.91979777726131,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 42.20398810872403,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 53.85121953867835,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 124.39722444953088,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 37.92965673845167,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 36.4477743375902,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 34.11346323693885,
    "('SVR', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 38.20844765304754,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 45.44528441870752,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 124.39722444953088,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 35.587636852816665,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 35.15418057053925,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 59.40881236263931,
    "('SVR', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 38.308178909296174,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 44.200360665189486,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 124.39722444953088,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 37.946687589469406,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 38.249151766978244,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 36.8453281229517,
    "('SVR', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 38.06710640151229,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 36.05355079477863,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 124.39722444953088,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 36.52245398903808,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 34.700200671280044,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 36.53629597195584,
    "('SVR', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 37.870476328221784,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 37.5879173089043,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 124.39722444953088,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 37.86058050064629,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 35.204180489176835,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 126.93101617911356,
    "('SVR', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 37.54754945709802,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 53.85121953867858,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 133.0035323813963,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 37.91719846333061,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 34.292700032009556,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 102.87715953388803,
    "('SVR', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 67.43700908864085,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 45.44528441870796,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 133.0035323813963,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 35.571255788770415,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 33.970449936823286,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 78.57285430611792,
    "('SVR', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 67.10152685449032,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 44.20036066518973,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 133.0035323813963,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 37.94185416227758,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 34.905773647710845,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 81.73025893067927,
    "('SVR', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 66.96398188477605,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 36.0535507947788,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 133.0035323813963,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 36.52686529157542,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 34.806016923684524,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 57.83463693888103,
    "('SVR', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 66.83628774062198,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 37.58791730890499,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 133.0035323813963,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 37.86320157203423,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 35.7194829396293,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 36.06804437390558,
    "('SVR', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 66.42145280418377,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 42.32081911055967,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 89.94006528899112,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 36.67241140042011,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 34.465371285313445,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 42.7682758101475,
    "('SVR', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 40.0385588255687,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 40.511561335721666,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 89.94006528899112,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 36.16963876998447,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 35.638234170965376,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 33.66405353455872,
    "('SVR', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 40.55882025166531,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 40.58772621161868,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 89.94006528899112,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 35.97923760049973,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 34.45978886076952,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 26.29378035678087,
    "('SVR', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 40.09573556560075,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 34.70593355170185,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 89.94006528899112,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 34.97835962511261,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 35.291184341461665,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 28.8965592551221,
    "('SVR', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 40.07625856432747,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 35.247731367677346,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 89.94006528899112,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 35.43963213273978,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 35.9590831292263,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 41.67765750392246,
    "('SVR', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 39.43152200443089,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 219.3706741625831,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 293.783300615675,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 95.5582104946227,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 220.79004046447528,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 930.2980920647069,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 346.6954569103529,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 74.65692760884335,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 293.783300615675,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 44.46896292497954,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 96.29892995187546,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 320.2118929007768,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 279.20215685214333,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 77.6248576009406,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 293.783300615675,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 48.93723371082129,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 160.2493353617946,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 897.0389296755036,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 283.2267664581037,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 47.508003682617456,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 293.783300615675,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 48.64881454918047,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 127.39559274791313,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 1432.4541105043234,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 281.37268188580873,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 104.80816282220187,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 293.783300615675,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 95.6301844618816,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 225.70162621285888,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 797.6686953025946,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 355.16356602019374,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 219.37067416294792,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 293.783300615675,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 116.04049304289374,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 227.20180251031928,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 1057.2583802774925,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 484.3811401280295,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 74.65692760846848,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 293.783300615675,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 44.51278616950941,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 406.5653202331659,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 5326.842730537457,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 451.5208694420298,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 77.62485760068478,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 293.783300615675,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 48.975617970879775,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 93.61753126363342,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 3563.1639861420445,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 467.16617484872245,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 47.508003682535076,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 293.783300615675,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 48.6876049338055,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 324.682519514118,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 2119.240001123579,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 504.8044464661613,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 104.8081628221853,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 293.783300615675,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 116.05783490157677,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 212.29518352439985,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 6296.204525760795,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 491.10076077516015,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 2358.031833903243,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 47.868564887874214,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 74.62664114127512,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 1717.211600399775,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 73.82546139422287,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 50.2516887158646,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 3903.7077973478567,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 47.868564887874214,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 70.54534249693687,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 63.27097771802473,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 61.35495470853285,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 50.23688898691666,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 897.4658202504111,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 47.868564887874214,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 67.82457397312209,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 496.9727303857776,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 59.071096887443666,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 50.31596590531501,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 75.6041140589072,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 47.868564887874214,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 67.83737841039343,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 62.895437668467565,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 78.82754611302101,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 50.33065119911539,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 69.24465991465142,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 47.868564887874214,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 66.42682939540295,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 60.3450326601787,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 60.58894611415801,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 50.45775633035571,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 2358.0318339036894,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 47.85606128552784,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 74.52064729901214,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 59.587781973215215,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 142.344403404061,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 77.72810220351427,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 3903.707797348036,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 47.85606128552784,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 70.60067236187086,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 59.860889074005094,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 74.8382579277691,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 77.64494998187249,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 897.4658202504464,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 47.85606128552784,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 67.97306591534885,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 59.81569404173066,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 100.53993638249463,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 77.67429603468483,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 75.60411405890697,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 47.85606128552784,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 67.98497521862387,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 60.90256882168064,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 72.85583619872331,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 77.8886875454041,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 69.24465991465111,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 47.85606128552784,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 66.64245637898418,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 59.952281943384456,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 94.91547492094642,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 77.74107375729076,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 53.85121953867835,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 124.39722444953088,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 37.92965673845167,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 36.4477743375902,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 72.96585687728806,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 38.20844765304754,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 45.44528441870752,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 124.39722444953088,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 35.587636852816665,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 35.15418057053925,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 29.82529672325426,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 38.308178909296174,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 44.200360665189486,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 124.39722444953088,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 37.946687589469406,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 38.249151766978244,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 59.97490842136786,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 38.06710640151229,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 36.05355079477863,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 124.39722444953088,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 36.52245398903808,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 34.700200671280044,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 94.65280772159286,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 37.870476328221784,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 37.5879173089043,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 124.39722444953088,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 37.86058050064629,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 35.204180489176835,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 27.608575298109933,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 37.54754945709802,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 53.85121953867858,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 133.0035323813963,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 37.91719846333061,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 34.292700032009556,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 67.69419025139536,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 67.43700908864085,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 45.44528441870796,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 133.0035323813963,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 35.571255788770415,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 33.970449936823286,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 201.7610231657303,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 67.10152685449032,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 44.20036066518973,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 133.0035323813963,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 37.94185416227758,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 34.905773647710845,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 90.73212674868508,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 66.96398188477605,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 36.0535507947788,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 133.0035323813963,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 36.52686529157542,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 34.806016923684524,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 125.15158102800837,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 66.83628774062198,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 37.58791730890499,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 133.0035323813963,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 37.86320157203423,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 35.7194829396293,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 64.999710218033,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 66.42145280418377,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 42.32081911055967,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 89.94006528899112,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 36.67241140042011,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 34.465371285313445,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 39.410894952747725,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 40.0385588255687,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 40.511561335721666,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 89.94006528899112,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 36.16963876998447,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 35.638234170965376,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 34.13044408335734,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 40.55882025166531,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 40.58772621161868,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 89.94006528899112,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 35.97923760049973,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 34.45978886076952,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 31.733111611610433,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 40.09573556560075,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 34.70593355170185,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 89.94006528899112,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 34.97835962511261,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 35.291184341461665,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 36.42384659993873,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 40.07625856432747,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 35.247731367677346,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 89.94006528899112,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 35.43963213273978,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 35.9590831292263,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 44.045877572381734,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 11, 15, 173, 200, 335, 378, 379, 384), 'frozenset()')": 39.43152200443089,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 75.7742898934999,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 49.51462511134186,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 255.17850781538428,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 452.9765895193877,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 940.9364609803392,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 51.27763717979805,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 42.30688883874479,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 61.64355703428751,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 125.59040230438323,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 932.2133330633234,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 53.610013600524056,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 42.813904588313434,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 61.686962148229576,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 196.6981590419863,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 925.6243440794851,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 76.9858648508685,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 42.813904588313434,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 62.115760988876566,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 188.4621809728659,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 925.6874621803323,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 124.26804312597253,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 30.054866949165586,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 254.97404424847224,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 223.01327459022707,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 947.0697659504992,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 60.36326233438376,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 55.58707303217821,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 45.51903905691861,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 56.849040279351115,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 49.7296791968134,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 58.63331251725228,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 54.957638030694945,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 45.88367862975874,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 54.07754500315258,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 49.32377224634134,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 54.60240604065923,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 53.04191302743436,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 45.859773225781964,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 53.6484307177919,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 49.25765344298003,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 51.60743085439498,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 49.86795438112937,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 46.18640200550257,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 47.89425907937998,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 49.249260611645326,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 51.62606101158522,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 49.87908495572506,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 46.192261653840376,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 48.07016665782441,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 49.545697857560725,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 97.84119303774581,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 103.71030675021358,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 110.59547898391568,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 53.22626642213285,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 56.252086007109426,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 86.29624293838052,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 98.58732067500216,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 111.50606874509133,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 46.76146467131957,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 58.9763443455067,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 106.26594950438826,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 108.58913355781277,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 111.76452367630138,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 67.24579564009493,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 56.91878013280808,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 107.69146230120128,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 116.88690855848532,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 130.5481498286966,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 79.51456274891173,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 58.50323296678886,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 111.21744735600747,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 119.12625669350602,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 128.16772577988203,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 81.76568286651485,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 58.96049172313016,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 97.84119303774428,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 169.94841637041444,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 100.68046945738776,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 57.24126685416026,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 51.034513488360886,
    "('SVR', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 31.382513639480493,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 86.29624293837705,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 169.95578369597112,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 89.86659174851368,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 51.12359092628347,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 64.2691902402193,
    "('SVR', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 32.222819769475024,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 106.2659495043846,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 169.95578369597112,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 108.61304060367691,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 69.57091961380074,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 207.3984167659093,
    "('SVR', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 31.031135167479295,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 107.69146230119959,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 169.95578369597112,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 108.98747346342313,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 45.73225245878693,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 57.03787830919905,
    "('SVR', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 30.79101869591617,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 111.21744735600726,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 169.94841637041444,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 112.69634448270762,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 47.19075024697153,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 45.50774090931869,
    "('SVR', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 31.08928390809893,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 97.84119303774753,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 169.74988503650388,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 100.65068582689366,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 52.3542610178168,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 133.2623335568814,
    "('SVR', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 57.72738727984338,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 86.29624293837884,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 169.74988503650388,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 89.77372030347006,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 40.165291579775015,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 120.01098341638492,
    "('SVR', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 60.137976345039846,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 106.26594950438593,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 169.74988503650388,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 108.60080080469776,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 51.7707157932178,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 197.12892312520228,
    "('SVR', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 61.30358084558838,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 107.69146230120343,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 169.74988503650388,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 108.92930043308286,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 43.47709233140788,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 118.70855419093218,
    "('SVR', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 60.764856282405056,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 111.21744735600714,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 169.74988503650388,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 112.65449044006381,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 47.360048173905824,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 195.35659730343698,
    "('SVR', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 57.40995165236591,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 59.50561674608606,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 113.63982529655105,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 60.559726037446296,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 61.969981842959086,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 421.4428720469368,
    "('SVR', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 40.469557291966765,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 58.533975299220664,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 113.63982529655105,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 60.45305555370983,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 69.91374025011913,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 2481.0523749130293,
    "('SVR', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 40.69489331076556,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 59.254890699331334,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 113.63982529655105,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 61.07513868408254,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 63.13611230614862,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 75.77851711529686,
    "('SVR', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 39.88265619721542,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 67.45652180229553,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 113.63982529655105,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 67.49561365284346,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 68.63669034959764,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 105.92793000563765,
    "('SVR', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 39.7768089502794,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 67.24723913793677,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 113.63982529655105,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 67.2225498974731,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 68.64127106064225,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 35.7272737727304,
    "('SVR', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 40.1769053823581,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 75.77428989349971,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 252.026300643574,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 121.78905539903346,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 160.54292189122503,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 408.3266377969434,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 846.6421735660626,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 51.27763717980255,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 252.026300643574,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 79.06858498002632,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 181.7714476327325,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 313.84803151980736,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 653.8287042430825,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 53.61001360052317,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 252.026300643574,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 78.34759886465534,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 193.11694900176929,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 206.68606743341104,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 652.0534247706328,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 76.98586485086186,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 252.026300643574,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 78.75893316880045,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 188.59058394227864,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 705.3592769466384,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 655.244186219045,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 124.26804312597326,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 252.026300643574,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 121.80115208193205,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 222.8941320523844,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 2983.4295557262826,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 847.1569833339588,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 75.77428989329722,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 252.026300643574,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 139.37198469275253,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 205.05638121768644,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 9691.18586303366,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 1332.80586821383,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 51.27763717944903,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 252.026300643574,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 79.13236138420345,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 266.749421796573,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 6882.540963977691,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 1297.302946023187,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 53.6100136003983,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 252.026300643574,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 78.40989915927734,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 340.69531476060007,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 402.0992540834456,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 1289.2143802682494,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 76.98586485074858,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 252.026300643574,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 78.82093155781844,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 56.048628733635134,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 6714.562091498927,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 1290.3089633956477,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 124.26804312597525,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 252.026300643574,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 139.40821437799386,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 220.57172844300788,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 3986.906828956302,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 1341.860324505673,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 60.36326233438374,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 46.451281256233614,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 50.25720473121943,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 53.18033670688996,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 110.85498495556278,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 52.87914296253445,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 58.63331251725226,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 46.451281256233614,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 50.81547099387497,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 52.16853743071572,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 80.57724749977142,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 53.383466307897756,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 54.602406040659446,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 46.451281256233614,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 50.65554570731573,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 51.83695901424078,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 135.12145578883695,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 53.324076777043494,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 51.60743085439474,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 46.451281256233614,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 51.21798823882367,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 47.635266401489346,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 186.55592237235322,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 53.22301058057127,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 51.62606101158511,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 46.451281256233614,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 51.23543926257056,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 48.068347547190214,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 90.57416600963728,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 53.71569842552738,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 60.363262334383194,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 46.40969110239631,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 50.403960996463105,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 47.82206392550922,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 86.77275653561598,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 82.50640137869418,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 58.63331251725259,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 46.40969110239631,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 50.96609061084556,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 47.66228566450897,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 127.60688733242476,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 83.47161280661572,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 54.60240604065974,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 46.40969110239631,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 50.80227245983172,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 47.514198245522586,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 63.77646005783265,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 83.46239252050614,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 51.60743085439323,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 46.40969110239631,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 51.359290976095316,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 47.87771348534518,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 82.38900528216476,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 83.2071381570248,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 51.626061011584966,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 46.40969110239631,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 51.369365601282546,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 48.107684746949396,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 69.57245718401344,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 82.7387823599426,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 97.84119303774428,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 169.94841637041444,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 100.68046945738776,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 57.24126685416026,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 32.33602288982734,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 31.382513639480493,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 86.29624293837705,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 169.95578369597112,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 89.86659174851368,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 51.12359092628347,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 149.53702951557116,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 32.222819769475024,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 106.2659495043846,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 169.95578369597112,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 108.61304060367691,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 69.57091961380074,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 64.04782031904979,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 31.031135167479295,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 107.69146230119959,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 169.95578369597112,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 108.98747346342313,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 45.73225245878693,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 190.0243722330666,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 30.79101869591617,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 111.21744735600726,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 169.94841637041444,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 112.69634448270762,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 47.19075024697153,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 31.865147341138428,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 31.08928390809893,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 97.84119303774753,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 169.74988503650388,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 100.65068582689366,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 52.3542610178168,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 148.4864738629716,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 57.72738727984338,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 86.29624293837884,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 169.74988503650388,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 89.77372030347006,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 40.165291579775015,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 198.62358139655854,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 60.137976345039846,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 106.26594950438593,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 169.74988503650388,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 108.60080080469776,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 51.7707157932178,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 101.96760689544035,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 61.30358084558838,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 107.69146230120343,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 169.74988503650388,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 108.92930043308286,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 43.47709233140788,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 197.3927822936553,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 60.764856282405056,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 111.21744735600714,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 169.74988503650388,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 112.65449044006381,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 47.360048173905824,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 232.42540843581642,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 57.40995165236591,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 59.50561674608606,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 113.63982529655105,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 60.559726037446296,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 61.969981842959086,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 762.6001251752283,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 40.469557291966765,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 58.533975299220664,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 113.63982529655105,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 60.45305555370983,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 69.91374025011913,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 936.1068340108524,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 40.69489331076556,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 59.254890699331334,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 113.63982529655105,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 61.07513868408254,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 63.13611230614862,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 62.70055321097661,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 39.88265619721542,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 67.45652180229553,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 113.63982529655105,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 67.49561365284346,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 68.63669034959764,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 38.869341466936895,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 39.7768089502794,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 67.24723913793677,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 113.63982529655105,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 67.2225498974731,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 68.64127106064225,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 41.627336123924586,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 6, 10, 11, 15, 182, 183, 185, 187, 193), 'frozenset()')": 40.1769053823581,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 68.29398756902536,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 27.38939631066209,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 252.24008649392343,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 686.0798034600394,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 862.7494705070114,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 47.18152530176781,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 35.75105228262743,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 46.11218799878574,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 190.02935905394892,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 846.4908168534395,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 49.07059512251075,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 36.69481475561824,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 45.70670586525873,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 118.93958960452673,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 841.053262847677,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 70.8682989073031,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 36.69481475561824,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 45.85512404296913,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 153.62528943149874,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 840.9300008142569,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 97.03848380769111,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 28.794049214942476,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 252.07767016749924,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 122.93539774418443,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 860.8409774673895,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 65.01332073265883,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 58.14264067806558,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 45.48616289739944,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 56.3897657064843,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 48.22775550087847,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 59.37469507043024,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 55.667038812091704,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 45.83555061912245,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 54.265557450974164,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 48.095626805188786,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 55.95454177017136,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 54.00280043435753,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 45.81607922841389,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 51.88466083633819,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 48.04231987981818,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 51.83008313988462,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 49.93270623579623,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 46.07243745084668,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 49.936279862016846,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 48.036298861981045,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 51.27873514630485,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 49.56173844125871,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 46.075406181114694,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 48.07590842618079,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 47.89722390207456,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 86.66884594543939,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 96.27297519609621,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 114.80929251670746,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 54.198392628065506,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 48.709304060249124,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 90.53046207509693,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 100.65730292767353,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 115.5099598944279,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 51.788346871169345,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 50.07261767986944,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 98.77018431265579,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 103.74966442199882,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 115.42893699866094,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 52.43504151972851,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 48.999281962618845,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 85.48416911675683,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 100.91066805221773,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 142.31198968501195,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 88.52736334395863,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 49.56037938708567,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 88.31617311942016,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 102.73476700412635,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 138.88280228032124,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 85.13828613543745,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 48.45031971249237,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 86.6688459454372,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 169.94375492444408,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 87.09372021292202,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 59.7422106208502,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 58.842679868553425,
    "('SVR', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 31.963083167760537,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 90.53046207509445,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 169.95354039169433,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 90.37132169007724,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 64.54974017080556,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 414.36372347467307,
    "('SVR', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 33.59077602666609,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 98.77018431265196,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 169.95354039169433,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 98.23952872677893,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 69.78555197102122,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 200.91510993993373,
    "('SVR', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 32.78297988363369,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 85.48416911675483,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 169.95354039169433,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 89.03197464038463,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 42.88892700599637,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 48.356734710937815,
    "('SVR', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 32.369178180659766,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 88.31617311941741,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 169.94375492444408,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 92.25365637776801,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 44.1199570475932,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 239.17882076142115,
    "('SVR', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 32.16373742617342,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 86.66884594543957,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 169.74988503650388,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 86.97706061667222,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 45.89405772676155,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 185.43675652881058,
    "('SVR', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 67.80659443143425,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 90.53046207509782,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 169.74988503650388,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 90.21823461869502,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 41.51429087092017,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 84.5819766050644,
    "('SVR', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 69.4213893943276,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 98.77018431265407,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 169.74988503650388,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 98.16319559710635,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 48.51207495297908,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 167.62061388595194,
    "('SVR', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 66.25897821212136,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 85.48416911675727,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 169.74988503650388,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 88.88242545870744,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 41.26019832172736,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 77.03885097705903,
    "('SVR', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 67.13222337489444,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 88.3161731194212,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 169.74988503650388,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 92.12617700860834,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 43.75544585679142,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 174.9656580347968,
    "('SVR', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 64.50890988505513,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 57.87852414814846,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 113.63982529655105,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 58.502371514176986,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 66.28443874197956,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 38.54721977527906,
    "('SVR', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 37.933318248733755,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 56.42803031982916,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 113.63982529655105,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 58.320818979866374,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 63.476533048892335,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 84.94528693431592,
    "('SVR', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 38.225777080614144,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 56.753664119709946,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 113.63982529655105,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 58.48827971089497,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 65.20021369111606,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 30.015971245738026,
    "('SVR', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 38.048296915496564,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 62.409085403327815,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 113.63982529655105,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 62.38538312619153,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 64.1599551187623,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 55.77823285726841,
    "('SVR', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 37.88601761704897,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 62.0735574381996,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 113.63982529655105,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 62.05921081960298,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 62.83269757175912,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 78.61009642601685,
    "('SVR', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 37.81860966687386,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 68.29398756901249,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 252.026300643574,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 99.95701680536288,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 234.79267234712512,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 3527.7648707044164,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 132.91165592884448,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 47.18152530176486,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 252.026300643574,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 73.12951734814872,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 142.6655562505481,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 302.7251367192787,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 137.58152823808553,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 49.07059512251202,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 252.026300643574,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 72.17359428106994,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 152.44979928248338,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 681.1784209521792,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 139.4975271665473,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 70.86829890729638,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 252.026300643574,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 72.41776815929522,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 137.77324632374282,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 732.3679898188188,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 141.50540712039015,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 97.03848380768434,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 252.026300643574,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 99.92879121777132,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 121.4482022438623,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 255.02673920761342,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 138.1123738465641,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 68.29398756897525,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 252.026300643574,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 132.67630557235358,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 98.11577589937066,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 3345.347329294227,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 430.77654791256475,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 47.18152530167515,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 252.026300643574,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 73.22867628076676,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 213.41236516910982,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 6804.611235512955,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 389.74654010901963,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 49.07059512214563,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 252.026300643574,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 72.27154591494964,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 361.5526074620025,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 3712.732815091542,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 381.24149382197857,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 70.86829890717368,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 252.026300643574,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 72.51585427508329,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 122.456147020198,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 6300.604332965739,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 386.0191795921475,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 97.03848380767971,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 252.026300643574,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 132.60085990598645,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 122.10277930000615,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 844.9149460476308,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 408.16381015001355,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 65.01332073265937,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 46.451281256233614,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 50.61506219996289,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 53.08094085922544,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 123.45120004010298,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 56.32825838119704,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 59.37469507042999,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 46.451281256233614,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 50.848571864763834,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 52.60166715404393,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 52.974046754747036,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 55.74443519639689,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 55.9545417701712,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 46.451281256233614,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 50.54830566135765,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 52.059724193125014,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 53.90483014817132,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 56.04787884157055,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 51.8300831398846,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 46.451281256233614,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 51.084070399999646,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 48.01427082463882,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 105.53560439656951,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 56.00892809351053,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 51.2787351463048,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 46.451281256233614,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 50.81771741952066,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 47.8903759800036,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 46.38072202677471,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 56.32655297344574,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 65.01332073265885,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 46.40969110239631,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 50.82316098869427,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 48.51155725621306,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 60.978096944326346,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 79.85607361954902,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 59.374695070430725,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 46.40969110239631,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 51.06092367487166,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 47.8989288038056,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 64.45805142557775,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 80.22272131916306,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 55.95454177017146,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 46.40969110239631,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 50.753852367085216,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 47.73919951204189,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 129.92122719479994,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 80.0463208363897,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 51.83008313988472,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 46.40969110239631,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 51.285095984772724,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 48.04316656341047,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 86.4269479136766,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 80.1372683239143,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 51.27873514630428,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 46.40969110239631,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 51.00777935754072,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 47.89561708933752,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 61.38898813841872,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 79.2947279289417,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 86.6688459454372,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 169.94375492444408,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 87.09372021292202,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 59.7422106208502,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 58.8093435603381,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 31.963083167760537,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 90.53046207509445,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 169.95354039169433,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 90.37132169007724,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 64.54974017080556,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 111.69512541139022,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 33.59077602666609,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 98.77018431265196,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 169.95354039169433,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 98.23952872677893,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 69.78555197102122,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 208.60082091194752,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 32.78297988363369,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 85.48416911675483,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 169.95354039169433,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 89.03197464038463,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 42.88892700599637,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 380.10609184787245,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 32.369178180659766,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 88.31617311941741,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 169.94375492444408,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 92.25365637776801,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 44.1199570475932,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 295.31508133888724,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 32.16373742617342,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 86.66884594543957,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 169.74988503650388,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 86.97706061667222,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 45.89405772676155,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 82.01467287176058,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 67.80659443143425,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 90.53046207509782,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 169.74988503650388,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 90.21823461869502,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 41.51429087092017,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 138.5600674447919,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 69.4213893943276,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 98.77018431265407,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 169.74988503650388,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 98.16319559710635,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 48.51207495297908,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 101.69209196223935,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 66.25897821212136,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 85.48416911675727,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 169.74988503650388,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 88.88242545870744,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 41.26019832172736,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 116.37720774028537,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 67.13222337489444,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 88.3161731194212,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 169.74988503650388,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 92.12617700860834,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 43.75544585679142,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 141.95683338602723,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 64.50890988505513,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 57.87852414814846,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 113.63982529655105,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 58.502371514176986,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 66.28443874197956,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 30.099692353377094,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 37.933318248733755,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 56.42803031982916,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 113.63982529655105,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 58.320818979866374,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 63.476533048892335,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 50.26368580094447,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 38.225777080614144,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 56.753664119709946,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 113.63982529655105,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 58.48827971089497,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 65.20021369111606,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 28.916769750940446,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 38.048296915496564,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 62.409085403327815,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 113.63982529655105,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 62.38538312619153,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 64.1599551187623,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 298.7919650491273,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 37.88601761704897,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 62.0735574381996,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 113.63982529655105,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 62.05921081960298,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 62.83269757175912,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 165.5160261878276,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 4, 7, 10, 14, 22, 173, 179, 182, 183, 184, 185, 187, 188, 193), 'frozenset()')": 37.81860966687386,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 227.08535907203554,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 52.94362419042955,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 303.25361238733984,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 197.0266242988631,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 128.71165246424147,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 83.67923754211331,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 30.78078689791865,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 29.52167109614013,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 118.85361246004716,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 129.67643615580948,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 84.96612621370976,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 30.780766949039144,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 28.63481756936208,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 104.57161319723596,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 129.44168878953124,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 54.59066779272097,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 30.780766949039144,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 28.665326667695457,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 43.61438852912722,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 129.48223769918047,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 105.24611735975222,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 52.94213637331608,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 303.3225293745802,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 178.4774118123497,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 128.3615149202921,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 2694.352063095826,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 59.30254979403301,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 46.51266238085686,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 85.00726638774239,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 48.00934263096816,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 3597.9675290486457,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 228.76099939175077,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 47.109264843376614,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 51.42615500178977,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 47.99862236877368,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 692.9629773318188,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 67.25854361394678,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 47.047189680285825,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 62.131845635430125,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 48.005181441017356,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 70.85696536207128,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 67.49696070728741,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 47.04975805539952,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 53.64930221812488,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 48.004961431126816,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 65.38591226235086,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 61.702086568378256,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 46.83534127596982,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 51.875589605786175,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 48.00432492104088,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 56.38351629268443,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 51.792212334422096,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 49.160318241042916,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 35.64324965720121,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 37.18449545473633,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 49.99831826933553,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 46.38939879875585,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 44.77119206604864,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 36.90327739130001,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 37.56261851298739,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 47.33928687509485,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 44.0254983092633,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 42.67885900519751,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 36.655889559083846,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 37.12278485858934,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 36.81482125332858,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 37.693011336328794,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 41.64338552099921,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 42.45630527168478,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 37.116056298433115,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 37.470484695896715,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 37.95184485148215,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 41.29986618986984,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 40.462676467572514,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 37.08725049029986,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 56.38351629268489,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 122.81117253410912,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 39.75745186685886,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 34.97981510964572,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 52.092877817553706,
    "('SVR', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 39.13127379577318,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 49.99831826933494,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 122.81117253410912,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 35.19792860740725,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 32.30042160878324,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 44.00703893509264,
    "('SVR', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 39.32607547229393,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 47.339286875094764,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 122.81117253410912,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 38.05032438263831,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 34.501850388692176,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 70.53971798256015,
    "('SVR', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 38.96839715698282,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 36.814821253328276,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 122.81117253410912,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 37.38580219700055,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 33.0869041912292,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 32.570618515962366,
    "('SVR', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 38.844212028793294,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 37.470484695896324,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 122.81117253410912,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 37.85249605134838,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 33.438806833433915,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 52.140675188131915,
    "('SVR', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 38.677488899748994,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 56.38351629268621,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 133.0035323813963,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 39.72468355006106,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 32.73076805829348,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 44.101878522077875,
    "('SVR', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 69.17554077329962,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 49.99831826933497,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 133.0035323813963,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 35.15849673025191,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 32.26819582097452,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 48.905593869893195,
    "('SVR', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 69.77474825538667,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 47.339286875095574,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 133.0035323813963,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 38.04020304353378,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 33.4397316050884,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 35.0764140820998,
    "('SVR', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 69.21032519013865,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 36.81482125332845,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 133.0035323813963,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 37.37905206019885,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 33.235047729215275,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 60.199191911234216,
    "('SVR', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 69.0407862662135,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 37.47048469589661,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 133.0035323813963,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 37.847657630604466,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 33.42265544114691,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 49.31809608133916,
    "('SVR', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 68.31733390105282,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 41.86189992119772,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 89.94006528899112,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 37.467279982460674,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 35.7114638334335,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 28.362045160866288,
    "('SVR', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 39.248811859394145,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 40.795341407723726,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 89.94006528899112,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 37.2093825269375,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 36.03480455946922,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 62.823021600714114,
    "('SVR', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 39.511553889047754,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 40.839248785124646,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 89.94006528899112,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 37.19963334412796,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 35.67707776029512,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 75.4925587898865,
    "('SVR', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 39.2189144878967,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 36.85193450351779,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 89.94006528899112,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 37.00221508178048,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 35.456766571535496,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 43.884389105447845,
    "('SVR', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 39.212803249861494,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 36.90999666512212,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 89.94006528899112,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 37.04620220049822,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 35.39526292037694,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 61.07073538127944,
    "('SVR', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 39.191164840900264,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 227.08535907203898,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 293.783300615675,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 90.5337622262595,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 1980.2579204374808,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 3308.700759847635,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 326.818560271895,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 83.67923754211076,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 293.783300615675,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 60.0432580524112,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 111.5360010212892,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 1444.2838354975038,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 289.4081267007504,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 84.96612621372546,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 293.783300615675,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 59.6024516988014,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 124.1500969401895,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 1348.815693596788,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 290.83104198160623,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 54.590667792715806,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 293.783300615675,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 59.52578041362055,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 116.19127862850623,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 42.17064192531955,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 293.0796264760144,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 105.24611735975297,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 293.783300615675,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 90.5229201120862,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 177.86115130406935,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 111.04888396959309,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 331.8749457587483,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 227.08535907176355,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 293.783300615675,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 120.98426980191664,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 217.2520695029541,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 1548.936761804681,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 878.5100479260083,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 83.67923754170475,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 293.783300615675,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 60.30420308208283,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 142.1649425120238,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 348.59872735674105,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 903.2503383901403,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 84.96612621343023,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 293.783300615675,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 59.83290488195283,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 233.84700126852044,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 115.22195807344895,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 895.4287629044343,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 54.590667792628246,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 293.783300615675,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 59.756757680474614,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 206.9530646662618,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 4347.4246870630805,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 876.5425146066339,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 105.24611735975593,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 293.783300615675,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 120.95597965920612,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 194.64934032888962,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 1098.6781206917715,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 883.9468781377964,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 2694.3520630957787,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 47.868564887874214,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 64.46053415804384,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 54.918524380451814,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 77.38075101756291,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 50.58840774781566,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 3597.9675290485893,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 47.868564887874214,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 63.2583553568877,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 51.523335802616835,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 71.58564216469051,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 50.53657442607252,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 692.9629773317953,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 47.868564887874214,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 62.24810873146872,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 57.6725223120368,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 62.85569213147261,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 50.53845064993025,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 70.85696536207136,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 47.868564887874214,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 62.250715478443894,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 57.80912270793556,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 58.83436184384063,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 50.55096748377566,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 65.38591226235083,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 47.868564887874214,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 61.9132210321958,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 54.905412722858316,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 60.26640248310453,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 50.563672187003725,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 2694.3520630964267,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 47.85606128552784,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 64.74152910019454,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 56.63528854470111,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 81.61426835876989,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 71.18536774883731,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 3597.967529048805,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 47.85606128552784,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 63.69730190920673,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 56.602923644526626,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 67.48057198564487,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 71.25365791779183,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 692.9629773319294,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 47.85606128552784,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 62.826898373825834,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 56.148624914932874,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 68.95376166316476,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 71.339541976286,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 70.8569653620713,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 47.85606128552784,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 62.82925016410867,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 57.10488184425259,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 91.42958842018982,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 71.16165318676639,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 65.38591226235073,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 47.85606128552784,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 62.53954585177911,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 56.65424629194612,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 57.5509244367147,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 70.70173104677082,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 56.38351629268489,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 122.81117253410912,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 39.75745186685886,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 34.97981510964572,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 30.58825298676436,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 39.13127379577318,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 49.99831826933494,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 122.81117253410912,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 35.19792860740725,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 32.30042160878324,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 35.02525781995028,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 39.32607547229393,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 47.339286875094764,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 122.81117253410912,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 38.05032438263831,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 34.501850388692176,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 38.07933894804506,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 38.96839715698282,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 36.814821253328276,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 122.81117253410912,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 37.38580219700055,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 33.0869041912292,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 90.55252273344213,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 38.844212028793294,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 37.470484695896324,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 122.81117253410912,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 37.85249605134838,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 33.438806833433915,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 37.717840034418224,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 38.677488899748994,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 56.38351629268621,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 133.0035323813963,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 39.72468355006106,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 32.73076805829348,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 77.8040283060061,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 69.17554077329962,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 49.99831826933497,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 133.0035323813963,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 35.15849673025191,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 32.26819582097452,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 102.7756658970866,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 69.77474825538667,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 47.339286875095574,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 133.0035323813963,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 38.04020304353378,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 33.4397316050884,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 134.1767681343938,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 69.21032519013865,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 36.81482125332845,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 133.0035323813963,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 37.37905206019885,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 33.235047729215275,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 33.22487052482482,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 69.0407862662135,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 37.47048469589661,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 133.0035323813963,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 37.847657630604466,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 33.42265544114691,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 67.38035178361955,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 68.31733390105282,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 41.86189992119772,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 89.94006528899112,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 37.467279982460674,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 35.7114638334335,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 33.97006657958278,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 39.248811859394145,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 40.795341407723726,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 89.94006528899112,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 37.2093825269375,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 36.03480455946922,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 76.68969043047179,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 39.511553889047754,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 40.839248785124646,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 89.94006528899112,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 37.19963334412796,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 35.67707776029512,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 48.43285370546067,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 39.2189144878967,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 36.85193450351779,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 89.94006528899112,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 37.00221508178048,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 35.456766571535496,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 52.405149459684765,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 39.212803249861494,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 36.90999666512212,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 89.94006528899112,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 37.04620220049822,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 35.39526292037694,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 27.17922502193365,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 5, 6, 7, 11, 21, 116, 173, 180, 184, 187, 188, 334, 335, 368, 369, 373, 378, 379, 384), 'frozenset()')": 39.191164840900264,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 74.17149217199109,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 32.76285380177291,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 291.27928037922715,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 125.2084753805655,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 481.4560454818871,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 44.35716508818169,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 34.32746795223988,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 37.69843116759658,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 78.27755752129045,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 480.1710910288924,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 46.02959212454275,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 34.327406558519314,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 38.50488573345082,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 138.2842949514128,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 479.7302117973623,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 65.44685359187015,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 34.327406558519314,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 38.59214056590418,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 144.61182999844257,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 479.68788384243925,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 54.47363410798602,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 38.21670867344235,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 291.97443818482793,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 87.51248872900845,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 480.8856953516043,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 61.08178464431673,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 60.9638394806988,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 48.69907195427913,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 59.02954406329383,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 50.228122335705784,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 63.91103336495857,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 61.430416768946536,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 47.51411925116703,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 57.94917244913902,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 50.19431039860092,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 55.98580823045049,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 55.23204429743581,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 46.84132647215862,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 55.146508242774495,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 50.13417997093201,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 48.414842574888084,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 47.41339970243977,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 46.452917574763035,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 51.45089874935618,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 50.128969039273194,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 48.44342349349892,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 47.416403920164555,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 46.397416152283284,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 51.074801783810585,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 50.08467120034692,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 99.03450191434338,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 98.77599936742706,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 97.03896919856142,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 68.1596389484994,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 40.4074969853342,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 95.38678269822017,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 98.51216306085193,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 98.52377890980328,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 47.6355528413018,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 42.21052433823654,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 94.53764857009423,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 93.83834281184369,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 94.7780473880957,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 77.32485625534736,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 40.52518003788005,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 100.46529835528611,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 100.44963290958859,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 98.54655610340376,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 69.78907732046599,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 40.55742370749754,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 100.79492399197656,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 100.54118246699117,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 98.51000948232843,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 64.31868295791017,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 40.24483418704391,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 99.03450191434193,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 170.30512162619456,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 98.94321706828723,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 69.00722692592154,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 129.3273015734909,
    "('SVR', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 38.14915433995278,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 95.38678269821918,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 170.30512162619456,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 97.61064884321887,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 63.69426522061112,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 76.35169055665526,
    "('SVR', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 40.118847668205426,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 94.53764857009249,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 170.30512162619456,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 97.07622990537446,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 77.69020842157778,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 171.63490558162422,
    "('SVR', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 39.99387888998901,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 100.46529835528509,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 170.30512162619456,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 100.68763077118955,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 68.7826551328738,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 81.15275094243299,
    "('SVR', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 40.15402374078253,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 100.79492399197592,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 170.30512162619456,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 100.82837847129895,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 70.69475378338693,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 318.9654680176315,
    "('SVR', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 39.9850318881947,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 99.03450191434374,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 170.2300573672655,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 98.94226298042926,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 68.66235950512085,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 44.25248303307498,
    "('SVR', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 68.69190391416382,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 95.38678269822108,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 170.2300573672655,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 97.58367591647337,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 60.395987567996364,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 148.114982921183,
    "('SVR', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 69.26690729028078,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 94.53764857009448,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 170.2300573672655,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 97.08036302966285,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 72.48981707937787,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 54.16487689936953,
    "('SVR', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 68.30685729851594,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 100.46529835528577,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 170.2300573672655,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 100.6842611067669,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 71.17099564129121,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 44.40205745521662,
    "('SVR', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 68.48794045693701,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 100.79492399197667,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 170.2300573672655,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 100.82543845782936,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 76.8763760634,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 215.96647572562483,
    "('SVR', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 68.27038040721396,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 48.49061853880359,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 113.143362713983,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 48.393036165193365,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 50.446374230209514,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 89.54534456690172,
    "('SVR', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 44.12506477440379,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 48.40728665523905,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 113.143362713983,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 48.62051691483613,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 52.216753307660866,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 70.65244169785964,
    "('SVR', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 43.615193627803016,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 47.550728107631286,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 113.143362713983,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 47.79550031063051,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 50.09345481918468,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 153.46837466275537,
    "('SVR', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 43.321609080644976,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 48.04688213948995,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 113.143362713983,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 48.11552367653525,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 47.69111324361155,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 57.62175706680639,
    "('SVR', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 43.53025183259606,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 48.17458601940368,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 113.143362713983,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 48.178825056760815,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 46.05920969206158,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 841.481872162081,
    "('SVR', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 43.52831394156277,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 74.17149217198849,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 271.7674054574241,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 64.23833192995951,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 247.1909575758422,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 1260.965897930763,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 170.12789919480386,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 44.357165088176785,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 271.7674054574241,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 63.132624625208855,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 165.9605887535273,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 642.5882961000948,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 173.82749218457448,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 46.02959212454175,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 271.7674054574241,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 63.31247098985946,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 149.8507784636023,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 642.7083242574566,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 174.13500321000487,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 65.44685359187172,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 271.7674054574241,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 63.42459630680778,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 142.6240196966582,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 170.0878312155893,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 177.48294537581285,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 54.47363410798537,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 271.7674054574241,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 63.522721147109706,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 87.51519808626715,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 764.7422173946901,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 169.36092873988443,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 74.17149217191938,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 271.7674054574129,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 73.71711053102852,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 57.88201056211603,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 8203.08076479311,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 804.8020425650543,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 44.35716508791281,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 271.7674054574129,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 63.25522677435483,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 64.7985765345452,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 806.0319534394321,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 759.5913325943392,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 46.02959212438114,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 271.7674054574129,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 63.42831344230462,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 71.22325550264316,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 3515.035698869709,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 786.9766567431489,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 65.44685359181702,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 271.7674054574129,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 63.540633201250785,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 104.75850162029366,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 1849.4218911061666,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 747.5367178311539,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 54.47363410798022,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 271.7674054574129,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 73.29977703457354,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 68.6252066129822,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 5023.337361338316,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 771.1581473478166,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 61.081784644316784,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 46.220227842214165,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 49.50618338510605,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 52.95754469737343,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 48.67531729763015,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 61.97861326964321,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 63.911033364958705,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 46.220227842214165,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 48.4436076478743,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 53.079517651965425,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 125.09176821281991,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 61.06946906005699,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 55.98580823045056,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 46.220227842214165,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 48.09305481996437,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 51.99902324476309,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 54.00593833272366,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 60.75691270486387,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 48.41484257488818,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 46.220227842214165,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 47.7808937143097,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 48.76634891409285,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 61.697176415871766,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 60.68448591754725,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 48.44342349349884,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 46.220227842214165,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 47.802780375076544,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 48.719258466809926,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 54.189936835782206,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 59.9627169496991,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 61.08178464431513,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 46.19110415534551,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 49.58606426038768,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 48.90933228343908,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 67.45257920771853,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 81.71695417412307,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 63.91103336495604,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 46.19110415534551,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 48.565729019223376,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 48.7386874268606,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 60.418288409150676,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 82.24420903614164,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 55.985808230450374,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 46.19110415534551,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 48.215465523181734,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 48.482040913381724,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 93.34091241251762,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 82.12115440683274,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 48.414842574888105,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 46.19110415534551,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 47.90193756165322,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 48.980562611806846,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 150.83503381035112,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 82.2888435672922,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 48.44342349349884,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 46.19110415534551,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 47.92357645120401,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 48.625814344271404,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 74.81984289574197,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 82.03285684476357,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 99.03450191434193,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 170.30512162619456,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 98.94321706828723,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 69.00722692592154,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 218.30212836464958,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 38.14915433995278,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 95.38678269821918,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 170.30512162619456,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 97.61064884321887,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 63.69426522061112,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 104.61094371760771,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 40.118847668205426,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 94.53764857009249,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 170.30512162619456,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 97.07622990537446,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 77.69020842157778,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 123.37493013311962,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 39.99387888998901,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 100.46529835528509,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 170.30512162619456,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 100.68763077118955,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 68.7826551328738,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 231.72018050912183,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 40.15402374078253,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 100.79492399197592,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 170.30512162619456,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 100.82837847129895,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 70.69475378338693,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 217.82312043958157,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 39.9850318881947,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 99.03450191434374,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 170.2300573672655,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 98.94226298042926,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 68.66235950512085,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 151.65220187793284,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 68.69190391416382,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 95.38678269822108,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 170.2300573672655,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 97.58367591647337,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 60.395987567996364,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 71.06788854743684,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 69.26690729028078,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 94.53764857009448,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 170.2300573672655,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 97.08036302966285,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 72.48981707937787,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 42.82843005331893,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 68.30685729851594,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 100.46529835528577,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 170.2300573672655,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 100.6842611067669,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 71.17099564129121,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 53.800309180758,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 68.48794045693701,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 100.79492399197667,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 170.2300573672655,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 100.82543845782936,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 76.8763760634,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 48.499289492712364,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 68.27038040721396,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 48.49061853880359,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 113.143362713983,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 48.393036165193365,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 50.446374230209514,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 57.83019858713596,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 44.12506477440379,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 48.40728665523905,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 113.143362713983,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 48.62051691483613,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 52.216753307660866,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 35.3987577918822,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 43.615193627803016,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 47.550728107631286,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 113.143362713983,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 47.79550031063051,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 50.09345481918468,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 37.20763783428463,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 43.321609080644976,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 48.04688213948995,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 113.143362713983,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 48.11552367653525,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 47.69111324361155,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 658.2646169883271,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 43.53025183259606,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 48.17458601940368,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 113.143362713983,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 48.178825056760815,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 46.05920969206158,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 9223393.27326005,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 2, 5, 6, 9, 11, 12, 14, 131, 144, 146, 151, 183, 196, 210), 'frozenset()')": 43.52831394156277,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 212.6599486063375,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 89.73799669028844,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 234.39604320156593,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 46.00779489645913,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 349.9178028762463,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 68.79069589492018,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 31.83827558320425,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 28.80573348668824,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 141.76146074665874,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 345.8275819523348,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 71.50687862784804,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 31.83831528007764,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 31.435093093954148,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 227.2593573934142,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 346.2039817312025,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 43.43913225185676,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 31.83831528007764,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 31.244099131276094,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 175.89842023726382,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 346.2377652457422,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 58.04032991355237,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 113.72913743245651,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 234.15911103404164,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 607.4106880432505,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 351.5340502601922,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 86.88328417919593,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 64.79655568766515,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 46.550829419933514,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 63.61378465752213,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 47.381895005491565,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 617.3719493910589,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 56.96104726551613,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 46.57497892678194,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 48.17995809526764,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 47.37840530928894,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 207.9176562536051,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 59.49535862838423,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 46.64156225234018,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 56.59524309275356,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 47.38139582219043,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 62.21531365628211,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 59.49535862838423,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 46.64136168704012,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 51.96120836580182,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 47.38126160811115,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 64.65720553910568,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 60.894029442636885,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 46.62200488941893,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 53.062216151863375,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 47.38708449266966,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 79.52973254785212,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 67.25233540164434,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 56.55512010249083,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 57.78372847461394,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 38.99226252177305,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 80.05533117559291,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 72.14562360254845,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 54.162595448597784,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 54.10335432218435,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 39.228035696139955,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 73.0833726544167,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 68.75316171037097,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 54.69490384371662,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 51.047706723283625,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 38.89516627271636,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 50.90575449019122,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 49.88791826996494,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 48.436892905163845,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 63.18806450303136,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 38.855874926125516,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 50.7160749862736,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 49.89130229058376,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 48.75040430665601,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 66.11109746768606,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 38.72855209897989,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 79.52973254785317,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 123.73704670610609,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 55.49330822218812,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 64.73592704192049,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 39.116904562314204,
    "('SVR', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 38.98539232352174,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 80.0553311755929,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 123.73704670610609,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 53.94183623778402,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 60.2906756411467,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 49.672121473700145,
    "('SVR', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 39.15596650881753,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 73.08337265441801,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 123.73704670610609,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 54.681549615619154,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 72.59755518006767,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 154.51540169056392,
    "('SVR', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 39.27662378306988,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 50.90575449019188,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 123.73704670610609,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 51.13806859182278,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 46.50671565040531,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 85.8845852801839,
    "('SVR', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 39.098154694020224,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 50.716074986273696,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 123.73704670610609,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 51.32827510605653,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 46.340372283341566,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 56.052633612644755,
    "('SVR', '(<mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 38.99636238801101,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 79.52973254785434,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 133.0035323813963,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 55.479172252854205,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 47.2958079381716,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 70.88132655905622,
    "('SVR', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 71.1071301656174,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 80.05533117559345,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 133.0035323813963,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 53.925587507340246,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 43.29769480679315,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 126.90426432296194,
    "('SVR', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 72.00477011534066,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 73.08337265441895,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 133.0035323813963,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 54.67586642411535,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 45.421797943626565,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 87.6806571817596,
    "('SVR', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 71.56420212536773,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 50.905754490192464,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 133.0035323813963,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 51.15392622282017,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 47.41013126028583,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 73.90907690978634,
    "('SVR', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 71.73398837981418,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 50.71607498627371,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 133.0035323813963,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 51.34393511443744,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 48.628215225459826,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 45.67761637643899,
    "('SVR', '(<mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 70.41961515750437,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 51.376431747770454,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 89.94006528899112,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 41.912751360951475,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 36.860839895702014,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 48.14028662899287,
    "('SVR', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 39.03790017239507,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 49.19290940927328,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 89.94006528899112,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 41.503108352565754,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 36.73603368908755,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 47.60664511598384,
    "('SVR', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 39.742860131042015,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 49.83728632779352,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 89.94006528899112,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 41.474713928625754,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 36.6962651568745,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 30.613908566284444,
    "('SVR', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 39.395848154050306,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 40.481737712740056,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 89.94006528899112,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 40.531234654459126,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 39.40248527064922,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 26.69901621231651,
    "('SVR', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 39.31131318917382,
    "('LinearRegression', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 40.3320323241314,
    "('ElasticNet', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 89.94006528899112,
    "('BayesianRidge', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 40.418367497040045,
    "('HuberRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 34.822167181943875,
    "('SGDRegressor', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 35.587886874886095,
    "('SVR', '(<mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>,)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 39.13547584389418,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 212.6599486063367,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 293.783300615675,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 68.57942292672757,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 262.2233523386281,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 287.73297754323744,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 249.77501931983159,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 68.79069589491523,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 293.783300615675,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 41.37650422978882,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 148.4493703336619,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 1493.1114392287773,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 174.78716285163034,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 71.5068786278345,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 293.783300615675,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 43.822818196108514,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 213.58208015342402,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 949.969066578671,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 177.18806770091723,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 43.439132251858084,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 293.783300615675,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 43.605219086405754,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 156.06548757780195,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 1222.2111718243798,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 181.94082061257086,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 58.0403299135559,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 293.783300615675,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 68.5240761858963,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 606.8470055711447,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 361.25733089983686,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 266.4656964964787,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 212.65994860615635,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 293.783300615675,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 89.3384227014645,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 672.7310939324027,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 1102.1002348518352,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 747.497930680355,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 68.79069589450808,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 293.783300615675,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 41.42550058705154,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 685.6688303076821,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 1893.2082635266588,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 769.2456831436388,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 71.50687862754458,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 293.783300615675,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 43.86443950398209,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 466.4107216905331,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 2072.3596735070914,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 765.2336426386653,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 43.439132251814414,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 293.783300615675,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 43.64713230643578,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 746.349660975558,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 418.1637195570816,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 759.6203096367449,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 58.040329913547495,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 293.783300615675,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 89.27235665955013,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 710.4373604599233,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 6033.531783659706,
    "('SVR', '(<mlforecast.target_transforms.AutoDifferences object at 0x000002647178E090>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 772.51170597523,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 86.88328417919689,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 47.868564887874214,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 61.06587510030786,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 61.27670957238765,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 57.25344339920787,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 51.18035238766348,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 617.3719493910456,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 47.868564887874214,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 60.61219537889333,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 49.79404303463026,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 78.17942453979883,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 50.90239869509509,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 207.91765625361228,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 47.868564887874214,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 60.399264002533116,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 52.6017838740668,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 57.51953618188136,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 50.88267037277367,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 62.215313656282156,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 47.868564887874214,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 60.40102481850471,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 55.39185243366587,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 57.60915438552681,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 50.90402027455977,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 64.65720553910572,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 47.868564887874214,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 60.84179777541304,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 55.47917818368738,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 68.93465931558971,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 51.12216440943301,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 86.88328417919926,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 47.85606128552784,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 61.47104214112352,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 55.34618390163777,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 67.64728485530127,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 78.37383957583347,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 617.3719493910255,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 47.85606128552784,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 60.973562927063064,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 54.329794208083605,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 149.80741361690795,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 78.3580521524184,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 207.9176562535855,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 47.85606128552784,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 60.77694452670559,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 53.73376902453315,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 76.02820180052618,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 78.58462082654397,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 62.21531365628217,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 47.85606128552784,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 60.77849993107404,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 53.29628601331834,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 65.46933438326336,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 78.62030144450483,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 64.65720553910562,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 47.85606128552784,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 61.26456220262098,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 55.94144532911982,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 64.41986965627635,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalDifferences object at 0x0000026473BC17F0>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 78.68849482966587,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 79.52973254785317,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 123.73704670610609,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 55.49330822218812,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 64.73592704192049,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 66.71074528954635,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 38.98539232352174,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 80.0553311755929,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 123.73704670610609,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 53.94183623778402,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 60.2906756411467,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 62.449154374042394,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 39.15596650881753,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 73.08337265441801,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 123.73704670610609,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 54.681549615619154,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 72.59755518006767,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 60.65692961524425,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 39.27662378306988,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 50.90575449019188,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 123.73704670610609,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 51.13806859182278,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 46.50671565040531,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 96.30288891802073,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 39.098154694020224,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 50.716074986273696,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 123.73704670610609,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 51.32827510605653,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 46.340372283341566,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 65.03205108193143,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalStandardScaler object at 0x0000026473BC25D0>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 38.99636238801101,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 79.52973254785434,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 133.0035323813963,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 55.479172252854205,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 47.2958079381716,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 80.18650080554468,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 71.1071301656174,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 80.05533117559345,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 133.0035323813963,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 53.925587507340246,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 43.29769480679315,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 65.36940687399309,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 72.00477011534066,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 73.08337265441895,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 133.0035323813963,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 54.67586642411535,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 45.421797943626565,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 87.5465105513336,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 71.56420212536773,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 50.905754490192464,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 133.0035323813963,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 51.15392622282017,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 47.41013126028583,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 64.72117589207494,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 71.73398837981418,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 50.71607498627371,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 133.0035323813963,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 51.34393511443744,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 48.628215225459826,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 60.36982956716216,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalMinMaxScaler object at 0x0000026473BC2F30>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 70.41961515750437,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 51.376431747770454,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 89.94006528899112,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 41.912751360951475,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 36.860839895702014,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 29.742226989016807,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (1, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),)), (7, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 39.03790017239507,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 49.19290940927328,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 89.94006528899112,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 41.503108352565754,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 36.73603368908755,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 27.164240029446063,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(7, (CPUDispatcher(<function rolling_mean_30 at 0x0000026475B27E20>),)), (1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 39.742860131042015,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 49.83728632779352,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 89.94006528899112,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 41.474713928625754,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 36.6962651568745,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 29.874980667332217,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),)), (30, (CPUDispatcher(<function expanding_mean at 0x00000264502DFE20>),))})')": 39.395848154050306,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 40.481737712740056,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 89.94006528899112,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 40.531234654459126,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 39.40248527064922,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 59.3200459891996,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset({(1, (CPUDispatcher(<function rolling_mean_14 at 0x0000026475B25080>),))})')": 39.31131318917382,
    "('LinearRegression', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 40.3320323241314,
    "('ElasticNet', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 89.94006528899112,
    "('BayesianRidge', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 40.418367497040045,
    "('HuberRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 34.822167181943875,
    "('SGDRegressor', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 31.188352394884987,
    "('SVR', '(<mlforecast.target_transforms.AutoSeasonalityAndDifferences object at 0x000002645A6ED070>, <mlforecast.target_transforms.LocalBoxCox object at 0x0000026473BC2390>)', (1, 10, 11, 15, 16, 150, 172, 188, 198, 199, 222, 273, 336, 368, 384), 'frozenset()')": 39.13547584389418
}